'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = style;
exports.overrideStylesheet = overrideStylesheet;
exports.injectStylesheet = injectStylesheet;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Stylesheet = require('./Stylesheet');

var _Stylesheet2 = _interopRequireDefault(_Stylesheet);

var _getComponentDisplayName = require('./getComponentDisplayName');

var _getComponentDisplayName2 = _interopRequireDefault(_getComponentDisplayName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * @copyright 2015-present Prometheus Research, LLC
                                                                                                                                                                                                                              * 
                                                                                                                                                                                                                              */

function style(Component, spec) {
  var displayName = spec.displayName,
      stylesheetSpec = _objectWithoutProperties(spec, ['displayName']);

  if (displayName == null) {
    displayName = (0, _getComponentDisplayName2.default)(Component);
  }

  if (typeof Component !== 'string' && Component.defaultProps && Component.defaultProps.stylesheet instanceof _Stylesheet.Stylesheet) {
    var _stylesheet = Component.defaultProps.stylesheet.override(stylesheetSpec, spec.displayName);
    return overrideStylesheet(Component, displayName, _stylesheet);
  } else {
    var _stylesheet2 = (0, _Stylesheet2.default)(displayName, stylesheetSpec);
    return injectStylesheet(Component, displayName, _stylesheet2);
  }
}

function overrideStylesheet(Component, displayName, stylesheet) {
  var _class, _temp;

  var defaultProps = Component.defaultProps;
  var C = (_temp = _class = function (_Component) {
    _inherits(C, _Component);

    function C() {
      _classCallCheck(this, C);

      return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));
    }

    return C;
  }(Component), _class.displayName = displayName, _class.defaultProps = _extends({}, defaultProps, { stylesheet: stylesheet }), _temp);
  return C;
}

function injectStylesheet(Component, displayName, stylesheet) {
  var _class2, _temp2;

  var C = (_temp2 = _class2 = function (_ComponentWithStylesh) {
    _inherits(C, _ComponentWithStylesh);

    function C() {
      _classCallCheck(this, C);

      return _possibleConstructorReturn(this, (C.__proto__ || Object.getPrototypeOf(C)).apply(this, arguments));
    }

    return C;
  }(ComponentWithStylesheet), _class2.displayName = displayName, _class2.defaultProps = {
    variant: {},
    Component: Component,
    stylesheet: stylesheet
  }, _temp2);

  return C;
}

var ComponentWithStylesheet = function (_React$Component) {
  _inherits(ComponentWithStylesheet, _React$Component);

  function ComponentWithStylesheet() {
    _classCallCheck(this, ComponentWithStylesheet);

    return _possibleConstructorReturn(this, (ComponentWithStylesheet.__proto__ || Object.getPrototypeOf(ComponentWithStylesheet)).apply(this, arguments));
  }

  _createClass(ComponentWithStylesheet, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          variant = _props.variant,
          extraClassName = _props.className,
          Component = _props.Component,
          stylesheet = _props.stylesheet,
          props = _objectWithoutProperties(_props, ['variant', 'className', 'Component', 'stylesheet']);

      var className = stylesheet.toClassName(variant);
      if (extraClassName) {
        className = className + ' ' + extraClassName;
      }
      return _react2.default.createElement(Component, _extends({}, props, {
        className: className
      }));
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.props.stylesheet.inject();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.props.stylesheet.dispose();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.stylesheet !== this.props.stylesheet) {
        this.props.stylesheet.dispose();
        nextProps.stylesheet.inject();
      }
    }
  }]);

  return ComponentWithStylesheet;
}(_react2.default.Component);
